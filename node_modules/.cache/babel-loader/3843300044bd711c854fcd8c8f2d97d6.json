{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\Web Development - React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expense.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expense(props) {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\n\n  const yearChangeHandler = yearParameter => {\n    setSelectedYear(yearParameter);\n  };\n\n  const filteredItems = props.items.filter(item => {\n    return item.date.getFullYear().toString() === selectedYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No content found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n\n  if (filteredItems.length > 0) {\n    expensesContent = filteredItems.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      date: expense.date,\n      price: expense.amount\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onYearChange: yearChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expense, \"dSWAbeYWMCtwaeZYEEEnVkoo2Z0=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"sources":["C:/Users/lenovo/Documents/Web Development - React/01-starting-setup/src/components/Expenses/Expense.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expense","props","selectedYear","setSelectedYear","yearChangeHandler","yearParameter","filteredItems","items","filter","item","date","getFullYear","toString","expensesContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,iBAAiB,GAAIC,aAAD,IAAmB;AAC3CF,IAAAA,eAAe,CAACE,aAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IAAI;AAC/C,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCV,YAA9C;AACD,GAFqB,CAAtB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,aAAa,CAACQ,MAAd,GAAqB,CAAzB,EAA4B;AAC1BD,IAAAA,eAAe,GAACP,aAAa,CAACS,GAAd,CAAkBC,OAAO,iBACvC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,MAAA,IAAI,EAAED,OAAO,CAACN,IAHhB;AAIE,MAAA,KAAK,EAAEM,OAAO,CAACE;AAJjB,OACOF,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADc,CAAhB;AAOD;;AAED,sBACE;AAAA,2BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACA,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEjB,YAA1B;AAAwC,QAAA,YAAY,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,cADA,EAECS,eAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjCQb,O;;KAAAA,O;AAmCT,eAAeA,OAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expense.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expense(props) {\r\n\r\n  const [selectedYear, setSelectedYear] = useState(\"2020\");\r\n\r\n  const yearChangeHandler = (yearParameter) => {\r\n    setSelectedYear(yearParameter);\r\n  }\r\n\r\n  const filteredItems = props.items.filter(item => {\r\n    return item.date.getFullYear().toString() === selectedYear\r\n  })\r\n\r\n  let expensesContent = <p>No content found</p>\r\n\r\n  if (filteredItems.length>0) {\r\n    expensesContent=filteredItems.map(expense =>\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        date={expense.date}\r\n        price={expense.amount}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Card className=\"expenses\">\r\n    <ExpensesFilter selected={selectedYear} onYearChange={yearChangeHandler}/>\r\n    {expensesContent}\r\n    </Card>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Expense;\r\n"]},"metadata":{},"sourceType":"module"}